{"timestamp":"2025-07-07T04:38:46.998446","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-07T04:38:46.999103","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/new_conn.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-07T04:38:47.555492Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T04:38:47.555941Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T04:38:47.556835Z","level":"info","event":"Current task name:transfer_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T04:38:47.557111Z","level":"info","event":"Dag name:new_conn_hook_based","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T04:38:47.036534","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-07-07T04:38:47.555795","level":"info","event":"Connection Retrieved 'source_postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-07T04:38:47.561841","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-07-07T04:38:47.571194","level":"info","event":"Connection Retrieved 'dest_postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-07T04:38:47.871481","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-07T04:38:47.906209Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T04:38:47.906752Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T04:38:47.907108Z","level":"info","event":"Task operator:<Task(PythonOperator): transfer_data>","chan":"stdout","logger":"task"}
